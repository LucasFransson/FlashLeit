{
	"cardCollections": [
		{
			"id": 1,
			"name": "C# Questions",
			"cards": [
				{
					"id": 1,
					"question": "What framework is C# closely associated with?",
					"correctAnswer": "C# is closely associated with the .NET framework.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 2,
					"question": "What keyword is used in C# to declare a constant value?",
					"correctAnswer": "The \"const\" keyword is used to declare a constant value in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 3,
					"question": "Which C# feature allows you to define a contract that classes must adhere to?",
					"correctAnswer": "Interfaces allow you to define a contract that classes must adhere to in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 4,
					"question": "What keyword in C# is used to handle exceptions?",
					"correctAnswer": "The \"try-catch\" block is used to handle exceptions in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 5,
					"question": "What C# feature allows you to execute a block of code repeatedly based on a condition?",
					"correctAnswer": "Loops, such as \"for\", \"while\", and \"do-while\", allow you to execute a block of code repeatedly based on a condition.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 6,
					"question": "In C#, what is the base class from which all other classes inherit?",
					"correctAnswer": "In C#, all classes inherit from the \"System.Object\" class.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 7,
					"question": "What keyword in C# is used to encapsulate and protect an object's state?",
					"correctAnswer": "The \"encapsulation\" concept is implemented using \"private\" and \"protected\" access modifiers in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 8,
					"question": "Which C# feature allows you to group related methods, properties, and events?",
					"correctAnswer": "Classes and structs allow you to group related methods, properties, and events in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 9,
					"question": "What is the entry point method of a C# console application?",
					"correctAnswer": "The entry point method of a C# console application is Main().",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 10,
					"question": "What keyword is used in C# to inherit from a base class?",
					"correctAnswer": "The : (colon) is used for inheritance, and the keyword base can be used to refer to the base class.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 11,
					"question": "What is the keyword for creating a new instance of an object in C#?",
					"correctAnswer": "The new keyword is used to create a new instance of an object.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 12,
					"question": "What is the default access modifier for members of a class in C#?",
					"correctAnswer": "The default access modifier for members of a class is private.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 13,
					"question": "How do you define a method that doesn't return a value in C#?",
					"correctAnswer": "A method that doesn't return a value is defined using the void keyword.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 14,
					"question": "Which keyword is used to specify that a method or property is overridden in a derived class?",
					"correctAnswer": "The override keyword is used to specify that a method or property is overridden.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 15,
					"question": "Which data type in C# is used to store a Unicode character?",
					"correctAnswer": "The char data type is used to store a Unicode character.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 16,
					"question": "What is the C# keyword to specify a block of code that can be executed regardless of whether an exception is thrown?",
					"correctAnswer": "The finally block is executed regardless of whether an exception is thrown.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 17,
					"question": "How do you define a multi-dimensional array in C#?",
					"correctAnswer": "Multi-dimensional arrays in C# are defined using commas, e.g., int[,] arrayName.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 18,
					"question": "What is the C# structure that allows you to group multiple statements under a single name?",
					"correctAnswer": "Methods allow you to group multiple statements under a single name in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 19,
					"question": "Which C# data type is used to hold any type of value?",
					"correctAnswer": "The object data type can hold any type of value in C#.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 20,
					"question": "What C# feature allows you to perform operations without having to check for null references?",
					"correctAnswer": "The null-conditional operator (? and ??) allows you to perform operations without having to check for null references.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 21,
					"question": "What is the process of automatically reclaiming memory that is no longer in use in C#?",
					"correctAnswer": "Garbage Collection (GC) is the process of automatically reclaiming memory that is no longer in use.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				},
				{
					"id": 22,
					"question": "What is the C# keyword to specify that a variable's value cannot be changed after it's set?",
					"correctAnswer": "The readonly keyword specifies that a variable's value cannot be changed after it's set.",
					"wrongAnswer1": null,
					"wrongAnswer2": null,
					"wrongAnswer3": null,
					"collectionId": 1
				}
			]
		}
	]
}
